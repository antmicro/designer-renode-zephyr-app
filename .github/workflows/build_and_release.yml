name: Build application and release

on: [push,pull_request,workflow_dispatch]

jobs:
  build_and_release:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Setup Zephyr project
        uses: zephyrproject-rtos/action-zephyr-setup@v1
        with:
          app-path: source
          toolchains: arm-zephyr-eabi

      - name: Build application
        shell: bash
        run: |
          mkdir -p artifacts

          west build --pristine -b nrf52840dk_nrf52840 source/app
          cp build/zephyr/zephyr.elf artifacts/software.elf

      - name: Run test in Renode
        uses: antmicro/renode-test-action@v4
        with:
          tests-to-run: source/app/shell_module.robot
          renode-arguments:
            --variable KEYWORDS:${{ github.workspace }}/zephyr/tests/robot/common.robot
            --variable RESC:@${{ github.workspace }}/simulation.resc
            --variable UART:sysbus.uart0
            --variable ELF:@${{ github.workspace }}/artifacts/software.elf

      - name: Store artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: build-artifacts
          path: artifacts/software.elf

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/software.elf
          asset_name: software.elf
          asset_content_type: application/octet-stream
